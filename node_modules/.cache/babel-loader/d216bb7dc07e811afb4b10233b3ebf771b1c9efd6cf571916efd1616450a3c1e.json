{"ast":null,"code":"var _jsxFileName = \"/Users/arlene/Downloads/GAMEW/nysl/src/components/Schedule.js\";\nimport React from 'react';\nimport gameData from '../data/gameData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  const gamesByMonth = Object.values(gameData.games).reduce((acc, game) => {\n    const month = new Date(game.date).getMonth();\n    const monthName = new Date(game.date).toLocaleString('default', {\n      month: 'long'\n    });\n    if (!acc[month]) {\n      acc[month] = {\n        name: monthName,\n        games: []\n      };\n    }\n    acc[month].games.push(game);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"* All games take place on Saturday\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), Object.values(gamesByMonth).map(monthData => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: monthData.name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Teams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: monthData.games.sort((a, b) => new Date(a.date) - new Date(b.date)).map((game, index) => {\n              var _gameData$locations$g;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(game.date).toLocaleDateString('en-US', {\n                    month: 'numeric',\n                    day: 'numeric'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: game.teams.join(\" vs \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_gameData$locations$g = gameData.locations[game.location]) === null || _gameData$locations$g === void 0 ? void 0 : _gameData$locations$g.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: game.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, monthData.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","gameData","jsxDEV","_jsxDEV","Schedule","gamesByMonth","Object","values","games","reduce","acc","game","month","Date","date","getMonth","monthName","toLocaleString","name","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","monthData","toUpperCase","sort","a","b","index","_gameData$locations$g","toLocaleDateString","day","teams","join","locations","location","fullName","time","_c","$RefreshReg$"],"sources":["/Users/arlene/Downloads/GAMEW/nysl/src/components/Schedule.js"],"sourcesContent":["\nimport React from 'react';\nimport gameData from '../data/gameData.json';\n\nconst Schedule = () => {\n  const gamesByMonth = Object.values(gameData.games).reduce((acc, game) => {\n    const month = new Date(game.date).getMonth();\n    const monthName = new Date(game.date).toLocaleString('default', { month: 'long' });\n    if (!acc[month]) {\n      acc[month] = {\n        name: monthName,\n        games: []\n      };\n    }\n    acc[month].games.push(game);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Game Schedule</h2>\n      <p className=\"text-muted\">* All games take place on Saturday</p>\n      \n      {Object.values(gamesByMonth).map((monthData) => (\n        <div key={monthData.name} className=\"mb-4\">\n          <h3>{monthData.name.toUpperCase()}</h3>\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Teams</th>\n                  <th>Location</th>\n                  <th>Time</th>\n                </tr>\n              </thead>\n              <tbody>\n                {monthData.games.sort((a, b) => new Date(a.date) - new Date(b.date)).map((game, index) => (\n                  <tr key={index}>\n                    <td>{new Date(game.date).toLocaleDateString('en-US', { month: 'numeric', day: 'numeric' })}</td>\n                    <td>{game.teams.join(\" vs \")}</td>\n                    <td>{gameData.locations[game.location]?.fullName}</td>\n                    <td>{game.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}